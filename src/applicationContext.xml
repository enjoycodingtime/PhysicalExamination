<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:context="http://www.springframework.org/schema/context" 
xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
xmlns:jee="http://www.springframework.org/schema/jee" 
xmlns:tx="http://www.springframework.org/schema/tx" 
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:jpa="http://www.springframework.org/schema/data/jpa" 
xmlns:util="http://www.springframework.org/schema/util" 
xmlns:mvc="http://www.springframework.org/schema/mvc" 
xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.2.xsd   
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-3.2.xsd   
http://www.springframework.org/schema/jdbc 
http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd   
http://www.springframework.org/schema/jee 
http://www.springframework.org/schema/jee/spring-jee-3.2.xsd   
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.2.xsd   
http://www.springframework.org/schema/data/jpa 
http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd        
http://www.springframework.org/schema/util 
http://www.springframework.org/schema/util/spring-util-3.2.xsd 
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
<util:properties id="jdbc" location="classpath:db.properties"/>
   <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName"
			value="#{jdbc['driver']}"/>
		<property name="url"
			value="#{jdbc.url}"/>
		<property name="username"
			value="#{jdbc['user']}"/>
		<property name="password" 
			value="#{jdbc.pwd}"/> 
	</bean>		
<!-- 配置SqlSessionFactory -->
	<bean id="sqlSessionFactory" 
		class="org.mybatis.spring.SqlSessionFactoryBean">  
      <property name="dataSource" ref="dataSource" />
      <property name="mapperLocations" value="classpath:com/tarena/entity/*.xml"/>
    </bean>
    
    <!-- 配置MyBatis注解 -->
    <!-- 
    	MapperScannerConfigurer会自动的扫描指定包下的类，
    	它会扫描带有对应注解的类。
     -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       <property name="basePackage" value="com.tarena.dao" />
       <property name="annotationClass" value="com.tarena.annotation.MyBatisDao"/>
	</bean>
	
	
	<!-- 配置springmvc -->
	
	<!-- 扫描包“com.tarena”中返回的所有字符串  在前面加上"/WEB-INF/jsp/" 在后面加".jsp" 访问-->
	<context:component-scan base-package="com.tarena"/>
	<!-- 配置视图处理器 -->
	<bean id="jspView" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 配置前缀 -->
		<property name="prefix" value="/WEB-INF/"/>
		<!-- 配置后缀 -->
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 每次请求开始时，将request放入Spring中 -->
	
	<!-- 将AOP注解扫面开启 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
	        <props>		
	             <prop key="java.lang.Throwable">login/error</prop>
	        </props>
	    </property>
	</bean>
	<!-- 声明事务管理组件 -->
	<bean id="txManager" 
	    class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSource"/> 
	</bean>
	<!-- 开启事务注解扫描 -->
	<tx:advice id ="txAdvice" transaction-manager="txManager" >
		<tx:attributes>
				<tx:method name="find*" read-only="true"/>
				<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
				<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
				<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
		</tx:attributes>
	</tx:advice> 
	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="txAdvice" pointcut="within(com.tarena.controller..*)"/>
	</aop:config>
</beans>